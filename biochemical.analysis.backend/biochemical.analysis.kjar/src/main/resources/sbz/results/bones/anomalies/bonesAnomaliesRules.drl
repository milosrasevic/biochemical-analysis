package sbz;

import sbz.biochemical.analysis.model.analysis.Results;
import sbz.biochemical.analysis.model.bones.BonesAnalysis;
import sbz.biochemical.analysis.model.bones.analysis.BoneMarrow;
import sbz.biochemical.analysis.model.bones.analysis.BonesCondition;
import sbz.biochemical.analysis.model.bones.analysis.JointsCondition;
import sbz.biochemical.analysis.model.Gender;
import sbz.biochemical.analysis.model.analysis.Anomaly;

import constants.ReferenceValues;
import constants.Anomalies;

rule "Iron - High - Male"
    when
        $r: Results(bonesAnalysis.boneMarrow.iron > ReferenceValues.IRON_MAX_MALE_MCG_DL && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.IRON_ANOMALY_HIGH));
end

rule "Iron - High - Female"
    when
        $r: Results(bonesAnalysis.boneMarrow.iron > ReferenceValues.IRON_MAX_FEMALE_MCG_DL && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.IRON_ANOMALY_HIGH));
end

rule "Iron - Low - Male"
    when
        $r: Results(bonesAnalysis.boneMarrow.iron < ReferenceValues.IRON_MIN_MALE_MCG_DL && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.IRON_ANOMALY_LOW));
end

rule "Iron - Low - Female"
    when
        $r: Results(bonesAnalysis.boneMarrow.iron < ReferenceValues.IRON_MIN_FEMALE_MCG_DL && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.IRON_ANOMALY_LOW));
end

rule "Alkaline Phosphatase - High - Female"
    when
        $r: Results(bonesAnalysis.bonesCondition.alkalinePhosphatase > ReferenceValues.ALKALINE_PHOSPHATASE_MAX_FEMALE_U_L && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.ALKALINE_PHOSPHATASE_ANOMALY_HIGH));
end

rule "Alkaline Phosphatase - High - Male"
    when
        $r: Results(bonesAnalysis.bonesCondition.alkalinePhosphatase > ReferenceValues.ALKALINE_PHOSPHATASE_MAX_MALE_U_L && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.ALKALINE_PHOSPHATASE_ANOMALY_HIGH));
end

rule "Alkaline Phosphatase - Low - Female"
    when
        $r: Results(bonesAnalysis.bonesCondition.alkalinePhosphatase < ReferenceValues.ALKALINE_PHOSPHATASE_MIN_FEMALE_U_L && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.ALKALINE_PHOSPHATASE_ANOMALY_LOW));
end

rule "Alkaline Phosphatase - Low - Male"
    when
        $r: Results(bonesAnalysis.bonesCondition.alkalinePhosphatase < ReferenceValues.ALKALINE_PHOSPHATASE_MIN_MALE_U_L && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.ALKALINE_PHOSPHATASE_ANOMALY_LOW));
end

rule "Uric Acid - High - Male"
    when
        $r: Results(bonesAnalysis.jointsCondition.uricAcid > ReferenceValues.URIC_ACID_MAX_MALE_MMOL_L && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.URIC_ACID_ANOMALY_HIGH));
end

rule "Uric Acid - High - Female"
    when
        $r: Results(bonesAnalysis.jointsCondition.uricAcid > ReferenceValues.URIC_ACID_MAX_FEMALE_MMOL_L && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.URIC_ACID_ANOMALY_HIGH));
end

rule "Uric Acid - Low - Male"
    when
        $r: Results(bonesAnalysis.jointsCondition.uricAcid < ReferenceValues.URIC_ACID_MIN_MALE_MMOL_L && gender == Gender.MALE)
    then
        insert(new Anomaly(Anomalies.URIC_ACID_ANOMALY_LOW));
end

rule "Uric Acid - Low - Female"
    when
        $r: Results(bonesAnalysis.jointsCondition.uricAcid < ReferenceValues.URIC_ACID_MIN_FEMALE_MMOL_L && gender == Gender.FEMALE)
    then
        insert(new Anomaly(Anomalies.URIC_ACID_ANOMALY_LOW));
end